@use '@eightshapes/esds-tokens/dist/scss/esds-tokens-map' as *;
@use './color' as *;
@use './utils' as *;

$esds-code-tag-font-size: 14px;

@mixin esds-typography-reset(
  $font-family: $esds-font-family-sans-serif,
  $font-style: normal,
  $font-size: false,
  $font-size-token: 'body-m',
  $font-weight: $esds-font-weight-regular,
  $letter-spacing: 0,
  $line-height: $esds-font-line-height-normal,
  $responsive-font-size: false,
  $text-align: left,
  $text-decoration: none,
  $text-indent: 0,
  $text-shadow: none,
  $text-transform: none
) {
  @if $font-size {
    font-size: $font-size;
  } @else {
    @include esds-font-size($size: $font-size-token, $responsive: $responsive-font-size);
  }
  font-family: $font-family;
  font-style: $font-style;
  font-weight: $font-weight;
  letter-spacing: $letter-spacing;
  line-height: $line-height;
  text-align: $text-align;
  text-decoration: $text-decoration;
  text-indent: $text-indent;
  text-shadow: $text-shadow;
  text-transform: $text-transform;
}

@mixin esds-font-size($size: 'body-m', $responsive: false) {
  @if $responsive {
    @include esds-responsive-font-size($size);
  } @else {
    font-size: esds-token('font', 'size', $size, 'at-1000');
  }
}

@mixin esds-responsive-font-size($size: 'body-m') {
  font-size: esds-token('font', 'size', $size, 'default');

  @media screen and (min-width: 480px) {
    font-size: esds-token('font', 'size', $size, 'at-480');
  }
  @media screen and (min-width: 768px) {
    font-size: esds-token('font', 'size', $size, 'at-768');
  }
  @media screen and (min-width: 1000px) {
    font-size: esds-token('font', 'size', $size, 'at-1000');
  }
}

@mixin esds-heading-reset() {
  @include esds-typography-reset($font-weight: $esds-font-weight-semi-bold);
  line-height: $esds-font-line-height-headings;
  margin: 0;
}

@mixin esds-heading-level-1($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-level-1', $responsive: $responsive);
}

@mixin esds-heading-level-2($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-level-2', $responsive: $responsive);
}

@mixin esds-heading-level-3($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-level-3', $responsive: $responsive);
}

@mixin esds-heading-level-4($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-level-4', $responsive: $responsive);
}

@mixin esds-heading-level-5($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-level-5', $responsive: $responsive);
}

@mixin esds-heading-eyebrow($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-eyebrow', $responsive: $responsive);
  letter-spacing: 0.2em;
  line-height: $esds-font-line-height-headings;
  margin: 0;
  text-transform: uppercase;
}

@mixin esds-heading-eyebrow-small($responsive: false) {
  @include esds-heading-reset;
  @include esds-font-size($size: 'heading-eyebrow-small', $responsive: $responsive);
  letter-spacing: 0.2em;
  line-height: $esds-font-line-height-headings;
  margin: 0;
  text-transform: uppercase;
}

@mixin esds-body-lead() {
  @include esds-typography-reset;
  @include esds-font-size($size: 'heading-level-4');
  font-weight: $esds-font-weight-regular;
  line-height: $esds-font-line-height-normal;
  margin: 0;
}

@mixin esds-body-l() {
  @include esds-typography-reset;
  @include esds-font-size($size: 'body-l');
  font-weight: $esds-font-weight-regular;
  line-height: $esds-font-line-height-normal;
  margin: 0;
}

@mixin esds-body-m() {
  @include esds-typography-reset;
  @include esds-font-size($size: 'body-m');
  font-weight: $esds-font-weight-regular;
  line-height: $esds-font-line-height-normal;
  margin: 0;
}

@mixin esds-body-s() {
  @include esds-typography-reset;
  @include esds-font-size($size: 'body-s');
  font-weight: $esds-font-weight-regular;
  line-height: $esds-font-line-height-normal;
  margin: 0;
}
@mixin esds-body-xs() {
  @include esds-typography-reset;
  @include esds-font-size($size: 'body-xs');
  font-weight: $esds-font-weight-regular;
  line-height: $esds-font-line-height-normal;
  margin: 0;
}

@mixin esds-link() {
  @include esds-typography-reset;
  color: $esds-color-text-link-on-light;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

@mixin esds-code-tag() {
  background: $esds-color-background-light-secondary;
  border: $esds-border-control-default-on-light;
  border-radius: 2px;
  color: $esds-color-alert-error-on-light;
  font-family: $esds-font-family-monospace;
  font-size: $esds-code-tag-font-size;
  font-weight: 500;
  padding: $esds-space-quarter-x;
}

@mixin esds-text-crop(
  $line-height: $esds-font-line-height-normal,
  $top-adjustment: 0,
  $bottom-adjustment: 0
) {
  // Configured in Step 1
  $top-crop: 11;
  $bottom-crop: 7;
  $crop-font-size: 36;
  $crop-line-height: 1.2;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: max(
      ($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
      0
    ) / $crop-font-size;
  $dynamic-bottom-crop: max(
      ($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
      0
    ) / $crop-font-size;

  // Mixin output
  line-height: $line-height;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
    width: 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment}px);
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment}px);
  }
}
